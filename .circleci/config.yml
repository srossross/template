# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Go Get
          command: go get -v -t -d ./... github.com/golang/lint/golint
      - run: go test -v ./...
      - run: mkdir -p /tmp/commands
      # - run: $GOPATH/bin/golint ./...
      - run:
          name: Build Executables
          command: |
            make build GOOS=linux GOARCH=amd64
            make build GOOS=linux GOARCH=386
            make build GOOS=darwin GOARCH=amd64

      - store_artifacts:
          path: /tmp/commands
      - persist_to_workspace:
          root: /tmp/commands
          paths:
            - template-linux-amd64.tgz
            - template-linux-386.tgz
            - template-darwin-amd64.tgz
  deploy:
    docker:
      # specify the version
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: /tmp/commands

      - run:
          name: Create Github Release
          command: |
            go get github.com/aktau/github-release
            ls -al /tmp/commands/
            cat Makefile
            echo Uploading to Release ${CIRCLE_TAG:-$(git describe --always)}
            echo Uploading to ${CIRCLE_PROJECT_USERNAME} ${CIRCLE_PROJECT_REPONAME}

            make release TAG=${CIRCLE_TAG:-$(git describe --always)}
            make upload TAG=${CIRCLE_TAG:-$(git describe --always)}


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /v.*/
            branches:
              only: master
